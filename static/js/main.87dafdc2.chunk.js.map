{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","headingStyle","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","SetText","SetDay","SetReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksfromserver","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","tasktoToggle","updateTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87dafdc2.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color , text , onClick}) => {\n    return (\n        <button onClick={onClick} style={{backgroundColor: color}} className = 'btn'>{text}</button>\n    )\n}\n\nButton.defaultProps={\n    color : 'steelblue'\n}\n\nButton.propTypes = {\n    text : PropTypes.string,\n    color : PropTypes.string,\n    onClick : PropTypes.func,\n}\nexport default Button\n","import Button from './Button'\n\nconst Header = ({ title , onAdd, showAdd}) => {\n    const onClick = () => {\n        console.log('CLICK')\n    }\n    return (\n        <header className='header'>\n            <h1 style = {headingStyle}>{title}</h1>\n            <Button color = {showAdd ? 'red' : 'green'} text = {showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps={\n    'title' : 'Task-Reminder',\n}\n\n//CSS in js\nconst headingStyle={\n    color : 'black',\n    backgroundColor:'white'\n}\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task , onDelete , onToggle}) => {\n    return (\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => onToggle(task.id)}>\n            <h3>{task.text}<FaTimes style = {{color:'red' , cursor : 'pointer'}} onClick = {() => onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({tasks , onDelete , onToggle}) => {\n    return (\n        <>\n        {/* for each task in tasks , do the following (unique key value) */}\n          {tasks.map((task , index) => (\n              <Task key={index} task = {task} onDelete = {onDelete} onToggle = {onToggle}/>\n          ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text , SetText] = useState('')\n    const [day , SetDay] = useState('')\n    const [reminder , SetReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        // preventing default action \n        e.preventDefault()\n\n        if(!text){\n            alert('Please add a task')\n            return\n        }\n \n        onAdd({text , day , reminder})\n        SetText('')\n        SetDay('')\n        SetReminder(false)\n    }\n\n    return (\n        <form className = 'add-form' onSubmit={onSubmit}>\n            <div className = 'form-control'>\n                <label>Task</label>\n                <input type = 'text'  value = {text} onChange={(e) => SetText(e.target.value)}  placeholder = 'Add Task'></input>\n            </div>\n\n            <div className = 'form-control'>\n                <label>Day & Time</label>\n                <input type = 'text' value = {day} onChange={(e) => SetDay(e.target.value)} placeholder = 'Add Day & Time'></input>\n            </div>\n\n            <div className = 'form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type = 'checkbox' value = {reminder} onChange={(e) => SetReminder(e.currentTarget.checked)} ></input>\n            </div>\n\n            <input type = 'submit' checked={reminder} className='btn btn-block' value = 'Save Task'></input>\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState , useEffect } from 'react'\n\nfunction App() {\n  const [showAddTask , setShowAddTask] = useState(false)\n  const [tasks , setTasks] = useState([])\n \n  //  to show something as the page loads\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksfromserver = await fetchTasks()\n      setTasks(tasksfromserver)\n    }\n\n    getTasks()\n  } , [])\n\n  // fetch tasks from json\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    // console.log(data)\n    return data\n  }\n\n  // fetch tasks from json\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    // console.log(data)\n    return data\n  }\n\n\n  // Add task\n  const addTask = async(task) => {\n    // console.log(task)\n\n    // const id = tasks.length + 1\n    // const newTask = {id , ...task}\n    // setTasks([...tasks , newTask])\n \n    const res = await fetch('http://localhost:5000/tasks', {\n      method : 'POST',\n      headers:{\n        'Content-type' : 'application/json'\n      },\n      body : JSON.stringify(task)\n    })\n\n    const data = await res.json();\n\n    setTasks([...tasks , data])\n  }\n\n  //delete task \n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method : 'DELETE',\n    })\n\n\n    // console.log('delete' , id)\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // toggle reminder\n  const toggleReminder = async (id) => {\n    const tasktoToggle = await fetchTask(id)\n    const updateTask = {...tasktoToggle , reminder: !tasktoToggle.reminder }\n   \n     const res = await fetch(`http://localhost:5000/tasks/${id}` , {\n      method : 'PUT',\n      headers:{\n        'Content-type' : 'application/json'\n      },\n      body : JSON.stringify(updateTask)\n    })\n\n    const data = await res.json()\n    setTasks(tasks.map((task) => task.id === id ? {...task , reminder : data.reminder} : task))\n\n    // console.log(id)\n    // setTasks(tasks.map((task) => task.id === id ? {...task , reminder : !task.reminder} : task))\n  }\n\n  return (\n    <div className = \"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks = {tasks}  onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}